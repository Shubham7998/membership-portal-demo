import React, { useState } from 'react';
import { Grid, FormControl, InputLabel, TextField } from '@mui/material';

export default function YourComponent() {
  const [startDate, setStartDate] = useState('');

  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setStartDate(event.target.value);
  };

  return (
    <Grid container>
      <Grid item xs={12}>
        <FormControl fullWidth>
          <InputLabel id="startDate">Select Start Date</InputLabel>
          <TextField
            fullWidth
            id="startDate"
            variant="outlined"
            size="small"
            name='startDate'
            type='date'
            value={startDate}
            onChange={handleTextChange}
            InputLabelProps={{
              shrink: true,
            }}
          />
        </FormControl>
      </Grid>
    </Grid>
  );
}

// Assuming you have a function to format the date in the desired format
function formatDate(date: Date): string {
  const year = date.getFullYear();
  const month = String(date.getMonth() + 1).padStart(2, '0');
  const day = String(date.getDate()).padStart(2, '0');
  return `${year}-${month}-${day}`; // This format is compatible with DateOnly in C#
}

// Usage in your code
const startDateToSend = formatDate(startDate); // Adjust startDate to your actual date variable
const expiryDateToSend = formatDate(expiryDate); // Adjust expiryDate to your actual date variable

// Now you can send startDateToSend and expiryDateToSend to the backend
